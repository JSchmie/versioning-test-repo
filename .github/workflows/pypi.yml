name: Test CI PyPi Workflow

on:
  push:
    tags:
      - 'v*.*.*'
    branches: 
      - "develop"
    paths: 
      - "src/**"

  workflow_dispatch:
    inputs:
      test:
        description: "Run tests"
        default: true
        type: boolean
      publish_to_pypi:
        description: "Publish to PyPI"
        default: false
        type: boolean

jobs:
  Build-and-publish-to-Test-PyPI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # You can specify a specific version if needed
      - name: Install Dunamai
        run: |
          python -m pip install --upgrade pip
          pip install dunamai
      - name: Use Dunamai
        run: |
          # Example command using dunamai
          distance=$(dunamai from git --format "{distance}")
          branch=$(dunamai from git --format "{branch}")
          # Main logic
          if [ "$distance" = "0" ]; then
              dunamai from git --format "v{base}"
          elif [ "$branch" = "develop" ]; then
              dunamai from git --format "v{base}.dev{distance}"
          else
              dunamai from git --format "v{base}.dev{distance}+{commit}"
          fi

  Test-PyPi-install:
    name: Test Installation from TestPyPI
    needs: Build-and-publish-to-Test-PyPI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11, 3.12]
    steps:
      - uses: actions/checkout@v4
      - name: Simulate Setting up Python ${{ matrix.python-version }}
        run: echo "Setting up Python ${{ matrix.python-version }}"
      - name: Simulate Package Installation
        run: |
          echo "Installing package from TestPyPI"
          echo "Package installed successfully"
          echo "Testing package installation"
          echo "Package version: 1.0.0"
      - name: Fail this step intentionally
        run: |
          echo "This step will fail intentionally."
          exit 1  # Causes the step to fail

  Publish-to-PyPi:
      name: Publish to PyPI
      runs-on: ubuntu-latest
      needs: Test-PyPi-install
      if: |
          always() &&
          (( needs.Build-and-publish-to-Test-PyPI.result  != 'failure' &&
           needs.Test-PyPi-install.result != 'failure' ) ||
          ((github.event_name == 'workflow_dispatch' &&
          github.event.inputs.publish_to_pypi == 'true')))
      steps:
        - name: Checkout Repository Tags
          uses: actions/checkout@v4
          with:
            fetch-depth: '0'
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.x'  # You can specify a specific version if needed
        - name: Install Dunamai
          run: |
            python -m pip install --upgrade pip
            pip install dunamai
        - name: Use Dunamai
          run: |
            # Example command using dunamai
            distance=$(dunamai from git --format "{distance}")
            branch=$(dunamai from git --format "{branch}")
            # Main logic
            if [ "$distance" = "0" ]; then
                dunamai from git --format "v{base}"
            elif [ "$branch" = "develop" ]; then
                dunamai from git --format "v{base}.dev{distance}"
            else
                dunamai from git --format "v{base}.dev{distance}+{commit}"
            fi