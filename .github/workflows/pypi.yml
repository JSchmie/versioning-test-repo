name: Test CI PyPi Workflow

on:
  workflow_run:
    workflows: [Semantic Versioning for Tags]
    types:
      - completed

  pull_request_target:
    branches:
      - develop
    types:
      - closed

  workflow_dispatch:
    inputs:
      test:
        description: "Run tests"
        default: true
        type: boolean
      publish_to_pypi:
        description: "Publish to PyPI"
        default: false
        type: boolean

jobs:
  Build-and-publish-to-Test-PyPI:
    if: |
      ${{ contains(github.event.pull_request.labels.*.name, 'release') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # You can specify a specific version if needed
      - name: Install Dunamai
        run: |
          python -m pip install --upgrade pip
          pip install dunamai
      - name: Use Dunamai
        run: |
          # Example command using dunamai
          distance=$(dunamai from git --format "{distance}")
          branch=$(dunamai from git --format "{branch}")
          # Main logic
          if [ "$distance" = "0" ]; then
              dunamai from git --format "v{base}"
          elif [ "$branch" = "develop" ]; then
              dunamai from git --format "v{base}.dev{distance}"
          else
              dunamai from git --format "v{base}.dev{distance}+{commit}"
          fi
      - name: Check if Statement
        run: |
          
          if [[ ( "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.test }}" == "true" ) || 
                ( "${{ github.event_name }}" == "workflow_run" && "${{ github.event.workflow_run.conclusion }}" == "success" ) || 
                ( "${{ github.event_name }}" == "pull_request_target" && "${{ github.event.pull_request.merged }}" == "true" && "${{ contains(github.event.pull_request.labels.*.name, 'release') }}" == "true" ) ]]; then
            echo "true"
          else
            echo "false"
          fi
  Test-PyPi-install:
    if: |
      (${{ github.event_name }} == 'workflow_dispatch' && ${{ github.event.inputs.test }} == 'true') ||
      (${{ github.event_name }} == 'workflow_run' && ${{ github.event.workflow_run.conclusion }}  == 'success') ||
      (${{ github.event_name }} == 'pull_request_target' && ${{ github.event.pull_request.merged }}  == 'true' && ${{ contains(github.event.pull_request.labels.*.name, 'release') }} == 'true')
    name: Test Installation from TestPyPI
    needs: Build-and-publish-to-Test-PyPI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11, 3.12]
    steps:
      - uses: actions/checkout@v4
      - name: Simulate Setting up Python ${{ matrix.python-version }}
        run: echo "Setting up Python ${{ matrix.python-version }}"
      - name: Simulate Package Installation
        run: |
          echo "Installing package from TestPyPI"
          echo "Package installed successfully"
          echo "Testing package installation"
          echo "Package version: 1.0.0"

  Publish-to-PyPi:
      name: Publish to PyPI
      runs-on: ubuntu-latest
      needs: Test-PyPi-install
      if: |
          ${{ always() }} &&
          (${{ needs.Build-and-publish-to-Test-PyPI.result  != 'failure' }} && ${{ needs.Test-PyPi-install.result != 'failure' }}) &&
          (${{ github.event_name }} == 'workflow_dispatch' && ${{ github.event.inputs.publish_to_pypi }} == 'true' ) || 
          (${{ github.event_name }} == 'workflow_run' && ${{ github.event.workflow_run.conclusion }} == 'success') ||
          (${{ github.event_name }} == 'pull_request_target' && ${{ github.event.pull_request.merged }} == 'true' && ${{ contains(github.event.pull_request.labels.*.name, 'release') }} == 'true')
      steps:
        - name: Checkout Repository Tags
          uses: actions/checkout@v4
          with:
            fetch-depth: '0'
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.x'  # You can specify a specific version if needed
        - name: Install Dunamai
          run: |
            python -m pip install --upgrade pip
            pip install dunamai
        - name: Use Dunamai
          run: |
            # Example command using dunamai
            distance=$(dunamai from git --format "{distance}")
            branch=$(dunamai from git --format "{branch}")
            # Main logic
            if [ "$distance" = "0" ]; then
                dunamai from git --format "v{base}"
            elif [ "$branch" = "develop" ]; then
                dunamai from git --format "v{base}.dev{distance}"
            else
                dunamai from git --format "v{base}.dev{distance}+{commit}"
            fi
  echo-conditions:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Echo Logic Conditions
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Publish to PyPI input: ${{ github.event.inputs.publish_to_pypi }}"
          echo "Test input: ${{ github.event.inputs.test }}"
          echo "Previous workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Pull request merged: ${{ github.event.pull_request.merged }}"
          echo "Labels of the Pull Request: ${{ github.event.pull_request.labels.*.name }}"
          echo "Labels realese in PR?: ${{ contains(github.event.pull_request.labels.*.name, 'release') }}"
          
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.publish_to_pypi }}" == "true" ]]; then
            echo "Condition 1: Manual dispatch with publish_to_pypi is true"
          fi
          if [[ "${{ github.event_name }}" == "workflow_run" && "${{ github.event.workflow_run.conclusion }}" == "success" ]]; then
            echo "Condition 2: Workflow run with successful conclusion"
          fi
          if [[ "${{ github.event_name }}" == "pull_request_target" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
            echo "Condition 3: Pull request merged"
          fi
          
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.test }}" == "true" ]]; then
            echo "Condition 4: Manual dispatch with test is true"
          fi
          if [[ ("${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.publish_to_pypi }}" == "true") || ("${{ github.event_name }}" == "workflow_run" && "${{ github.event.workflow_run.conclusion }}" == "success") || ("${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.merged }}" == "true") ]]; then
            echo "Overall condition for publish-to-pypi: True"
          else
            echo "Overall condition for publish-to-pypi: False"
          fi
          
          if [[ ("${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.test }}" == "true") || ("${{ github.event_name }}" == "workflow_run" && "${{ github.event.workflow_run.conclusion }}" == "success") ]]; then
            echo "Overall condition for running tests: True"
          else
            echo "Overall condition for running tests: False"
          fi

          CONDITION1=$([[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.test }}" == "true" ]] && echo "true" || echo "false")
          CONDITION2=$([[ "${{ github.event_name }}" == "workflow_run" && "${{ github.event.workflow_run.conclusion }}" == "success" ]] && echo "true" || echo "false")
          CONDITION3=$([[ "${{ github.event_name }}" == "pull_request_target" && "${{ github.event.pull_request.merged }}" == "true" && "${{ contains(github.event.pull_request.labels.*.name, 'release') }}" == "true" ]] && echo "true" || echo "false")
          CONDITION4=$([[ "${{ contains(github.event.pull_request.labels.*.name, 'release') }}" == "true" ]] && echo "true" || echo "false")
          
          echo "Condition 1 (workflow_dispatch with test=true): $CONDITION1"
          echo "Condition 2 (workflow_run with success): $CONDITION2"
          echo "Condition 3 (pull_request merged): $CONDITION3"
          echo "Condition 4 (release label): $CONDITION4"
          
          if [[ "$CONDITION1" == "true" || "$CONDITION2" == "true" || "$CONDITION3" == "true" || "$CONDITION4" == "true" ]]; then
            echo "Overall condition for running: True"
          else
            echo "Overall condition for running: False"
          fi