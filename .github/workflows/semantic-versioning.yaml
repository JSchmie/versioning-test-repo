name: Semantic Versioning for Patches

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  bump-version:
    if: contains(github.event.pull_request.labels.*.name, 'patch')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.base.ref }}
      
      - name: Get Latest Tag
        id: get-latest-tag
        run: |
          # Get the latest tag, or initialize to v0.0.0 if no tags are found
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Determine Next Patch Version
        id: determine-next-version
        run: |
          latest_tag="${{ steps.get-latest-tag.outputs.latest_tag }}"

          # Split the latest tag into parts
          IFS='.' read -r -a parts <<< "${latest_tag#v}"
          major=${parts[0]}
          minor=${parts[1]}
          patch=${parts[2]}
          patch=$((patch + 1))
          next_version="v$major.$minor.$patch"

          echo "::set-output name=next_version::$next_version"
          echo "Next version determined: $next_version"
  
      - name: Bump Version and Tag
        id: bump_version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          latest_tag="${{ steps.get-latest-tag.outputs.latest_tag }}"
          next_version="${{ steps.determine-next-version.outputs.next_version }}"

          echo "Bumping version from $latest_tag to $next_version"

          # Tag the new version
          git tag "$next_version"

          # Configure GitHub token authentication
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git

          # Push the new tag to the remote repository
          git push origin "$next_version"
